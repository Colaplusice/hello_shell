# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: exam/exam_base.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import base_pb2 as base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='exam/exam_base.proto',
  package='exam_base',
  syntax='proto3',
  serialized_pb=_b('\n\x14\x65xam/exam_base.proto\x12\texam_base\x1a\nbase.proto\"7\n\x0fListVersionsRes\x12$\n\x08versions\x18\x01 \x03(\x0b\x32\x12.exam_base.Version\"0\n\x07Version\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x14\n\x0cproject_name\x18\x02 \x01(\t\"i\n\x0f\x43heckVersionRes\x12\x31\n\x06status\x18\x01 \x01(\x0e\x32!.exam_base.CheckVersionRes.Status\"#\n\x06Status\x12\x0b\n\x07INCHECK\x10\x00\x12\x0c\n\x08OUTCHECK\x10\x01\x32\xca\x01\n\x08\x45xamBase\x12\x39\n\x0cListVersions\x12\x0b.base.Empty\x1a\x1a.exam_base.ListVersionsRes\"\x00\x12\x41\n\x15\x43reateOrUpdateVersion\x12\x12.exam_base.Version\x1a\x12.exam_base.Version\"\x00\x12@\n\x0c\x43heckVersion\x12\x12.exam_base.Version\x1a\x1a.exam_base.CheckVersionRes\"\x00\x62\x06proto3')
  ,
  dependencies=[base__pb2.DESCRIPTOR,])



_CHECKVERSIONRES_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='exam_base.CheckVersionRes.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INCHECK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTCHECK', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=224,
  serialized_end=259,
)
_sym_db.RegisterEnumDescriptor(_CHECKVERSIONRES_STATUS)


_LISTVERSIONSRES = _descriptor.Descriptor(
  name='ListVersionsRes',
  full_name='exam_base.ListVersionsRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='versions', full_name='exam_base.ListVersionsRes.versions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=102,
)


_VERSION = _descriptor.Descriptor(
  name='Version',
  full_name='exam_base.Version',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='exam_base.Version.version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='project_name', full_name='exam_base.Version.project_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=152,
)


_CHECKVERSIONRES = _descriptor.Descriptor(
  name='CheckVersionRes',
  full_name='exam_base.CheckVersionRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='exam_base.CheckVersionRes.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CHECKVERSIONRES_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=154,
  serialized_end=259,
)

_LISTVERSIONSRES.fields_by_name['versions'].message_type = _VERSION
_CHECKVERSIONRES.fields_by_name['status'].enum_type = _CHECKVERSIONRES_STATUS
_CHECKVERSIONRES_STATUS.containing_type = _CHECKVERSIONRES
DESCRIPTOR.message_types_by_name['ListVersionsRes'] = _LISTVERSIONSRES
DESCRIPTOR.message_types_by_name['Version'] = _VERSION
DESCRIPTOR.message_types_by_name['CheckVersionRes'] = _CHECKVERSIONRES
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ListVersionsRes = _reflection.GeneratedProtocolMessageType('ListVersionsRes', (_message.Message,), dict(
  DESCRIPTOR = _LISTVERSIONSRES,
  __module__ = 'exam.exam_base_pb2'
  # @@protoc_insertion_point(class_scope:exam_base.ListVersionsRes)
  ))
_sym_db.RegisterMessage(ListVersionsRes)

Version = _reflection.GeneratedProtocolMessageType('Version', (_message.Message,), dict(
  DESCRIPTOR = _VERSION,
  __module__ = 'exam.exam_base_pb2'
  # @@protoc_insertion_point(class_scope:exam_base.Version)
  ))
_sym_db.RegisterMessage(Version)

CheckVersionRes = _reflection.GeneratedProtocolMessageType('CheckVersionRes', (_message.Message,), dict(
  DESCRIPTOR = _CHECKVERSIONRES,
  __module__ = 'exam.exam_base_pb2'
  # @@protoc_insertion_point(class_scope:exam_base.CheckVersionRes)
  ))
_sym_db.RegisterMessage(CheckVersionRes)



_EXAMBASE = _descriptor.ServiceDescriptor(
  name='ExamBase',
  full_name='exam_base.ExamBase',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=262,
  serialized_end=464,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListVersions',
    full_name='exam_base.ExamBase.ListVersions',
    index=0,
    containing_service=None,
    input_type=base__pb2._EMPTY,
    output_type=_LISTVERSIONSRES,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateOrUpdateVersion',
    full_name='exam_base.ExamBase.CreateOrUpdateVersion',
    index=1,
    containing_service=None,
    input_type=_VERSION,
    output_type=_VERSION,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckVersion',
    full_name='exam_base.ExamBase.CheckVersion',
    index=2,
    containing_service=None,
    input_type=_VERSION,
    output_type=_CHECKVERSIONRES,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_EXAMBASE)

DESCRIPTOR.services_by_name['ExamBase'] = _EXAMBASE

# @@protoc_insertion_point(module_scope)
